<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="4344"><g><title>milestone`&lt;milestone::game::player::Person as milestone::game::player::Player&gt;::one_turn (1 samples, 0.02%)</title><rect x="0.0000%" y="277" width="0.0230%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>milestone`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="0.0000%" y="261" width="0.0230%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>milestone`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="0.0000%" y="245" width="0.0230%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="0.0000%" y="229" width="0.0230%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="0.0000%" y="213" width="0.0230%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>milestone`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="0.0000%" y="197" width="0.0230%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="0.0000%" y="181" width="0.0230%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>milestone`&lt;milestone::game::board::Board as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="0.0000%" y="165" width="0.0230%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="0.0000%" y="149" width="0.0230%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (2 samples, 0.05%)</title><rect x="0.0230%" y="245" width="0.0460%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="2"/><text x="0.2730%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.05%)</title><rect x="0.0230%" y="229" width="0.0460%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="2"/><text x="0.2730%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (7 samples, 0.16%)</title><rect x="0.0691%" y="213" width="0.1611%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="7"/><text x="0.3191%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (8 samples, 0.18%)</title><rect x="0.0691%" y="229" width="0.1842%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="8"/><text x="0.3191%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_deallocate (1 samples, 0.02%)</title><rect x="0.2302%" y="213" width="0.0230%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="1"/><text x="0.4802%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="0.2762%" y="213" width="0.0230%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="1"/><text x="0.5262%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.02%)</title><rect x="0.2762%" y="197" width="0.0230%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="1"/><text x="0.5262%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="0.2762%" y="181" width="0.0230%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="1"/><text x="0.5262%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (3 samples, 0.07%)</title><rect x="0.2993%" y="181" width="0.0691%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="3"/><text x="0.5493%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.07%)</title><rect x="0.2993%" y="165" width="0.0691%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="3"/><text x="0.5493%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.09%)</title><rect x="0.2993%" y="213" width="0.0921%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="4"/><text x="0.5493%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.09%)</title><rect x="0.2993%" y="197" width="0.0921%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="4"/><text x="0.5493%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="0.3683%" y="181" width="0.0230%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="1"/><text x="0.6183%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (4 samples, 0.09%)</title><rect x="0.3913%" y="181" width="0.0921%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="4"/><text x="0.6413%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.09%)</title><rect x="0.3913%" y="165" width="0.0921%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="4"/><text x="0.6413%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.12%)</title><rect x="0.3913%" y="197" width="0.1151%" height="15" fill="rgb(241,131,45)" fg:x="17" fg:w="5"/><text x="0.6413%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.02%)</title><rect x="0.4834%" y="181" width="0.0230%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="1"/><text x="0.7334%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="0.4834%" y="165" width="0.0230%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="1"/><text x="0.7334%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (11 samples, 0.25%)</title><rect x="0.5525%" y="165" width="0.2532%" height="15" fill="rgb(238,160,17)" fg:x="24" fg:w="11"/><text x="0.8025%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.25%)</title><rect x="0.5525%" y="149" width="0.2532%" height="15" fill="rgb(214,148,48)" fg:x="24" fg:w="11"/><text x="0.8025%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="0.8057%" y="165" width="0.0230%" height="15" fill="rgb(232,36,49)" fg:x="35" fg:w="1"/><text x="1.0557%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.39%)</title><rect x="0.5064%" y="197" width="0.3913%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="17"/><text x="0.7564%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.35%)</title><rect x="0.5525%" y="181" width="0.3453%" height="15" fill="rgb(229,88,8)" fg:x="24" fg:w="15"/><text x="0.8025%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (3 samples, 0.07%)</title><rect x="0.8287%" y="165" width="0.0691%" height="15" fill="rgb(213,181,19)" fg:x="36" fg:w="3"/><text x="1.0787%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.07%)</title><rect x="0.8287%" y="149" width="0.0691%" height="15" fill="rgb(254,191,54)" fg:x="36" fg:w="3"/><text x="1.0787%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.02%)</title><rect x="0.8978%" y="197" width="0.0230%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="1"/><text x="1.1478%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="0.8978%" y="181" width="0.0230%" height="15" fill="rgb(233,36,39)" fg:x="39" fg:w="1"/><text x="1.1478%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (6 samples, 0.14%)</title><rect x="1.0359%" y="149" width="0.1381%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="6"/><text x="1.2859%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (6 samples, 0.14%)</title><rect x="1.0359%" y="133" width="0.1381%" height="15" fill="rgb(245,192,40)" fg:x="45" fg:w="6"/><text x="1.2859%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.12%)</title><rect x="1.1740%" y="149" width="0.1151%" height="15" fill="rgb(238,167,29)" fg:x="51" fg:w="5"/><text x="1.4240%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.44%)</title><rect x="0.9438%" y="181" width="0.4374%" height="15" fill="rgb(232,182,51)" fg:x="41" fg:w="19"/><text x="1.1938%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.41%)</title><rect x="0.9669%" y="165" width="0.4144%" height="15" fill="rgb(231,60,39)" fg:x="42" fg:w="18"/><text x="1.2169%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.09%)</title><rect x="1.2891%" y="149" width="0.0921%" height="15" fill="rgb(208,69,12)" fg:x="56" fg:w="4"/><text x="1.5391%" y="159.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="1.3812%" y="181" width="0.0460%" height="15" fill="rgb(235,93,37)" fg:x="60" fg:w="2"/><text x="1.6312%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.07%)</title><rect x="1.4733%" y="165" width="0.0691%" height="15" fill="rgb(213,116,39)" fg:x="64" fg:w="3"/><text x="1.7233%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.09%)</title><rect x="1.6805%" y="149" width="0.0921%" height="15" fill="rgb(222,207,29)" fg:x="73" fg:w="4"/><text x="1.9305%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.37%)</title><rect x="1.5424%" y="165" width="0.3683%" height="15" fill="rgb(206,96,30)" fg:x="67" fg:w="16"/><text x="1.7924%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.14%)</title><rect x="1.7726%" y="149" width="0.1381%" height="15" fill="rgb(218,138,4)" fg:x="77" fg:w="6"/><text x="2.0226%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.14%)</title><rect x="1.7726%" y="133" width="0.1381%" height="15" fill="rgb(250,191,14)" fg:x="77" fg:w="6"/><text x="2.0226%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.09%)</title><rect x="2.0948%" y="149" width="0.0921%" height="15" fill="rgb(239,60,40)" fg:x="91" fg:w="4"/><text x="2.3448%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.02%)</title><rect x="2.1869%" y="149" width="0.0230%" height="15" fill="rgb(206,27,48)" fg:x="95" fg:w="1"/><text x="2.4369%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.05%)</title><rect x="2.2099%" y="149" width="0.0460%" height="15" fill="rgb(225,35,8)" fg:x="96" fg:w="2"/><text x="2.4599%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (44 samples, 1.01%)</title><rect x="2.2560%" y="149" width="1.0129%" height="15" fill="rgb(250,213,24)" fg:x="98" fg:w="44"/><text x="2.5060%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (44 samples, 1.01%)</title><rect x="2.2560%" y="133" width="1.0129%" height="15" fill="rgb(247,123,22)" fg:x="98" fg:w="44"/><text x="2.5060%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.12%)</title><rect x="3.2689%" y="133" width="0.1151%" height="15" fill="rgb(231,138,38)" fg:x="142" fg:w="5"/><text x="3.5189%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_small (65 samples, 1.50%)</title><rect x="1.9107%" y="165" width="1.4963%" height="15" fill="rgb(231,145,46)" fg:x="83" fg:w="65"/><text x="2.1607%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (6 samples, 0.14%)</title><rect x="3.2689%" y="149" width="0.1381%" height="15" fill="rgb(251,118,11)" fg:x="142" fg:w="6"/><text x="3.5189%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (1 samples, 0.02%)</title><rect x="3.3840%" y="133" width="0.0230%" height="15" fill="rgb(217,147,25)" fg:x="147" fg:w="1"/><text x="3.6340%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (4 samples, 0.09%)</title><rect x="3.4991%" y="133" width="0.0921%" height="15" fill="rgb(247,81,37)" fg:x="152" fg:w="4"/><text x="3.7491%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.09%)</title><rect x="3.4991%" y="117" width="0.0921%" height="15" fill="rgb(209,12,38)" fg:x="152" fg:w="4"/><text x="3.7491%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.05%)</title><rect x="3.5912%" y="133" width="0.0460%" height="15" fill="rgb(227,1,9)" fg:x="156" fg:w="2"/><text x="3.8412%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.30%)</title><rect x="3.4070%" y="165" width="0.2993%" height="15" fill="rgb(248,47,43)" fg:x="148" fg:w="13"/><text x="3.6570%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.23%)</title><rect x="3.4761%" y="149" width="0.2302%" height="15" fill="rgb(221,10,30)" fg:x="151" fg:w="10"/><text x="3.7261%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.07%)</title><rect x="3.6372%" y="133" width="0.0691%" height="15" fill="rgb(210,229,1)" fg:x="158" fg:w="3"/><text x="3.8872%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (30 samples, 0.69%)</title><rect x="3.7063%" y="165" width="0.6906%" height="15" fill="rgb(222,148,37)" fg:x="161" fg:w="30"/><text x="3.9563%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (29 samples, 0.67%)</title><rect x="3.7293%" y="149" width="0.6676%" height="15" fill="rgb(234,67,33)" fg:x="162" fg:w="29"/><text x="3.9793%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="4.3969%" y="165" width="0.0230%" height="15" fill="rgb(247,98,35)" fg:x="191" fg:w="1"/><text x="4.6469%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (10 samples, 0.23%)</title><rect x="4.4199%" y="165" width="0.2302%" height="15" fill="rgb(247,138,52)" fg:x="192" fg:w="10"/><text x="4.6699%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (91 samples, 2.09%)</title><rect x="8.8398%" y="133" width="2.0948%" height="15" fill="rgb(213,79,30)" fg:x="384" fg:w="91"/><text x="9.0898%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_size (85 samples, 1.96%)</title><rect x="8.9779%" y="117" width="1.9567%" height="15" fill="rgb(246,177,23)" fg:x="390" fg:w="85"/><text x="9.2279%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`free (157 samples, 3.61%)</title><rect x="7.4355%" y="149" width="3.6142%" height="15" fill="rgb(230,62,27)" fg:x="323" fg:w="157"/><text x="7.6855%" y="159.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.12%)</title><rect x="10.9346%" y="133" width="0.1151%" height="15" fill="rgb(216,154,8)" fg:x="475" fg:w="5"/><text x="11.1846%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.07%)</title><rect x="14.2495%" y="133" width="0.0691%" height="15" fill="rgb(244,35,45)" fg:x="619" fg:w="3"/><text x="14.4995%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.05%)</title><rect x="14.3186%" y="133" width="0.0460%" height="15" fill="rgb(251,115,12)" fg:x="622" fg:w="2"/><text x="14.5686%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (18 samples, 0.41%)</title><rect x="18.6694%" y="117" width="0.4144%" height="15" fill="rgb(240,54,50)" fg:x="811" fg:w="18"/><text x="18.9194%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (17 samples, 0.39%)</title><rect x="18.6924%" y="101" width="0.3913%" height="15" fill="rgb(233,84,52)" fg:x="812" fg:w="17"/><text x="18.9424%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (25 samples, 0.58%)</title><rect x="19.0838%" y="117" width="0.5755%" height="15" fill="rgb(207,117,47)" fg:x="829" fg:w="25"/><text x="19.3338%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (247 samples, 5.69%)</title><rect x="19.6593%" y="117" width="5.6860%" height="15" fill="rgb(249,43,39)" fg:x="854" fg:w="247"/><text x="19.9093%" y="127.50">libsyst..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (90 samples, 2.07%)</title><rect x="25.3453%" y="117" width="2.0718%" height="15" fill="rgb(209,38,44)" fg:x="1101" fg:w="90"/><text x="25.5953%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (28 samples, 0.64%)</title><rect x="27.4171%" y="117" width="0.6446%" height="15" fill="rgb(236,212,23)" fg:x="1191" fg:w="28"/><text x="27.6671%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (56 samples, 1.29%)</title><rect x="28.0617%" y="117" width="1.2891%" height="15" fill="rgb(242,79,21)" fg:x="1219" fg:w="56"/><text x="28.3117%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (29 samples, 0.67%)</title><rect x="28.6832%" y="101" width="0.6676%" height="15" fill="rgb(211,96,35)" fg:x="1246" fg:w="29"/><text x="28.9332%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`madvise (85 samples, 1.96%)</title><rect x="29.6501%" y="101" width="1.9567%" height="15" fill="rgb(253,215,40)" fg:x="1288" fg:w="85"/><text x="29.9001%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`free_tiny (895 samples, 20.60%)</title><rect x="11.0497%" y="149" width="20.6031%" height="15" fill="rgb(211,81,21)" fg:x="480" fg:w="895"/><text x="11.2997%" y="159.50">libsystem_malloc.dylib`free_tiny</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (751 samples, 17.29%)</title><rect x="14.3646%" y="133" width="17.2882%" height="15" fill="rgb(208,190,38)" fg:x="624" fg:w="751"/><text x="14.6146%" y="143.50">libsystem_malloc.dylib`tiny..</text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (100 samples, 2.30%)</title><rect x="29.3508%" y="117" width="2.3020%" height="15" fill="rgb(235,213,38)" fg:x="1275" fg:w="100"/><text x="29.6008%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (2 samples, 0.05%)</title><rect x="31.6068%" y="101" width="0.0460%" height="15" fill="rgb(237,122,38)" fg:x="1373" fg:w="2"/><text x="31.8568%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.09%)</title><rect x="31.6529%" y="149" width="0.0921%" height="15" fill="rgb(244,218,35)" fg:x="1375" fg:w="4"/><text x="31.9029%" y="159.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,181 samples, 27.19%)</title><rect x="4.6501%" y="165" width="27.1869%" height="15" fill="rgb(240,68,47)" fg:x="202" fg:w="1181"/><text x="4.9001%" y="175.50">milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as ..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.09%)</title><rect x="31.7449%" y="149" width="0.0921%" height="15" fill="rgb(210,16,53)" fg:x="1379" fg:w="4"/><text x="31.9949%" y="159.50"></text></g><g><title>milestone`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="31.8370%" y="165" width="0.0230%" height="15" fill="rgb(235,124,12)" fg:x="1383" fg:w="1"/><text x="32.0870%" y="175.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,347 samples, 31.01%)</title><rect x="0.9208%" y="197" width="31.0083%" height="15" fill="rgb(224,169,11)" fg:x="40" fg:w="1347"/><text x="1.1708%" y="207.50">milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop..</text></g><g><title>milestone`core::ptr::drop_in_place&lt;milestone::game::gamestate::State&gt; (1,325 samples, 30.50%)</title><rect x="1.4273%" y="181" width="30.5018%" height="15" fill="rgb(250,166,2)" fg:x="62" fg:w="1325"/><text x="1.6773%" y="191.50">milestone`core::ptr::drop_in_place&lt;milestone::gam..</text></g><g><title>milestone`__rdl_dealloc (3 samples, 0.07%)</title><rect x="31.8600%" y="165" width="0.0691%" height="15" fill="rgb(242,216,29)" fg:x="1384" fg:w="3"/><text x="32.1100%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.18%)</title><rect x="31.9291%" y="181" width="0.1842%" height="15" fill="rgb(230,116,27)" fg:x="1387" fg:w="8"/><text x="32.1791%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (5 samples, 0.12%)</title><rect x="31.9982%" y="165" width="0.1151%" height="15" fill="rgb(228,99,48)" fg:x="1390" fg:w="5"/><text x="32.2482%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.12%)</title><rect x="31.9982%" y="149" width="0.1151%" height="15" fill="rgb(253,11,6)" fg:x="1390" fg:w="5"/><text x="32.2482%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.07%)</title><rect x="32.1133%" y="181" width="0.0691%" height="15" fill="rgb(247,143,39)" fg:x="1395" fg:w="3"/><text x="32.3633%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="32.1133%" y="165" width="0.0691%" height="15" fill="rgb(236,97,10)" fg:x="1395" fg:w="3"/><text x="32.3633%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (3 samples, 0.07%)</title><rect x="32.1133%" y="149" width="0.0691%" height="15" fill="rgb(233,208,19)" fg:x="1395" fg:w="3"/><text x="32.3633%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.07%)</title><rect x="32.1133%" y="133" width="0.0691%" height="15" fill="rgb(216,164,2)" fg:x="1395" fg:w="3"/><text x="32.3633%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (8 samples, 0.18%)</title><rect x="32.1823%" y="181" width="0.1842%" height="15" fill="rgb(220,129,5)" fg:x="1398" fg:w="8"/><text x="32.4323%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (8 samples, 0.18%)</title><rect x="32.1823%" y="165" width="0.1842%" height="15" fill="rgb(242,17,10)" fg:x="1398" fg:w="8"/><text x="32.4323%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.28%)</title><rect x="32.6657%" y="165" width="0.2762%" height="15" fill="rgb(242,107,0)" fg:x="1419" fg:w="12"/><text x="32.9157%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.21%)</title><rect x="32.7348%" y="149" width="0.2072%" height="15" fill="rgb(251,28,31)" fg:x="1422" fg:w="9"/><text x="32.9848%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.18%)</title><rect x="32.7578%" y="133" width="0.1842%" height="15" fill="rgb(233,223,10)" fg:x="1423" fg:w="8"/><text x="33.0078%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (3 samples, 0.07%)</title><rect x="33.2643%" y="133" width="0.0691%" height="15" fill="rgb(215,21,27)" fg:x="1445" fg:w="3"/><text x="33.5143%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.07%)</title><rect x="33.2643%" y="117" width="0.0691%" height="15" fill="rgb(232,23,21)" fg:x="1445" fg:w="3"/><text x="33.5143%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="33.3333%" y="133" width="0.0230%" height="15" fill="rgb(244,5,23)" fg:x="1448" fg:w="1"/><text x="33.5833%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (4 samples, 0.09%)</title><rect x="33.3564%" y="133" width="0.0921%" height="15" fill="rgb(226,81,46)" fg:x="1449" fg:w="4"/><text x="33.6064%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.16%)</title><rect x="33.4484%" y="133" width="0.1611%" height="15" fill="rgb(247,70,30)" fg:x="1453" fg:w="7"/><text x="33.6984%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.21%)</title><rect x="33.6096%" y="133" width="0.2072%" height="15" fill="rgb(212,68,19)" fg:x="1460" fg:w="9"/><text x="33.8596%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (2 samples, 0.05%)</title><rect x="33.8168%" y="133" width="0.0460%" height="15" fill="rgb(240,187,13)" fg:x="1469" fg:w="2"/><text x="34.0668%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (1 samples, 0.02%)</title><rect x="33.8628%" y="133" width="0.0230%" height="15" fill="rgb(223,113,26)" fg:x="1471" fg:w="1"/><text x="34.1128%" y="143.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,473 samples, 33.91%)</title><rect x="0.3913%" y="213" width="33.9088%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="1473"/><text x="0.6413%" y="223.50">milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Dro..</text></g><g><title>milestone`core::ptr::drop_in_place&lt;milestone::game::gamestate::State&gt; (103 samples, 2.37%)</title><rect x="31.9291%" y="197" width="2.3711%" height="15" fill="rgb(241,108,4)" fg:x="1387" fg:w="103"/><text x="32.1791%" y="207.50">mi..</text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 1.93%)</title><rect x="32.3665%" y="181" width="1.9337%" height="15" fill="rgb(247,173,49)" fg:x="1406" fg:w="84"/><text x="32.6165%" y="191.50">m..</text></g><g><title>libsystem_malloc.dylib`free_tiny (59 samples, 1.36%)</title><rect x="32.9420%" y="165" width="1.3582%" height="15" fill="rgb(224,114,35)" fg:x="1431" fg:w="59"/><text x="33.1920%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 1.27%)</title><rect x="33.0341%" y="149" width="1.2661%" height="15" fill="rgb(245,159,27)" fg:x="1435" fg:w="55"/><text x="33.2841%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (18 samples, 0.41%)</title><rect x="33.8858%" y="133" width="0.4144%" height="15" fill="rgb(245,172,44)" fg:x="1472" fg:w="18"/><text x="34.1358%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.39%)</title><rect x="33.9088%" y="117" width="0.3913%" height="15" fill="rgb(236,23,11)" fg:x="1473" fg:w="17"/><text x="34.1588%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="34.3002%" y="197" width="0.0230%" height="15" fill="rgb(205,117,38)" fg:x="1490" fg:w="1"/><text x="34.5502%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="34.3002%" y="181" width="0.0230%" height="15" fill="rgb(237,72,25)" fg:x="1490" fg:w="1"/><text x="34.5502%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.02%)</title><rect x="34.3232%" y="197" width="0.0230%" height="15" fill="rgb(244,70,9)" fg:x="1491" fg:w="1"/><text x="34.5732%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.05%)</title><rect x="34.3923%" y="181" width="0.0460%" height="15" fill="rgb(217,125,39)" fg:x="1494" fg:w="2"/><text x="34.6423%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.05%)</title><rect x="34.3923%" y="165" width="0.0460%" height="15" fill="rgb(235,36,10)" fg:x="1494" fg:w="2"/><text x="34.6423%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.05%)</title><rect x="34.3923%" y="149" width="0.0460%" height="15" fill="rgb(251,123,47)" fg:x="1494" fg:w="2"/><text x="34.6423%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="34.4613%" y="149" width="0.0230%" height="15" fill="rgb(221,13,13)" fg:x="1497" fg:w="1"/><text x="34.7113%" y="159.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,489 samples, 34.28%)</title><rect x="0.2532%" y="229" width="34.2772%" height="15" fill="rgb(238,131,9)" fg:x="11" fg:w="1489"/><text x="0.5032%" y="239.50">milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop..</text></g><g><title>milestone`core::ptr::drop_in_place&lt;milestone::game::gamestate::State&gt; (10 samples, 0.23%)</title><rect x="34.3002%" y="213" width="0.2302%" height="15" fill="rgb(211,50,8)" fg:x="1490" fg:w="10"/><text x="34.5502%" y="223.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="34.3462%" y="197" width="0.1842%" height="15" fill="rgb(245,182,24)" fg:x="1492" fg:w="8"/><text x="34.5962%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.09%)</title><rect x="34.4383%" y="181" width="0.0921%" height="15" fill="rgb(242,14,37)" fg:x="1496" fg:w="4"/><text x="34.6883%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="34.4613%" y="165" width="0.0691%" height="15" fill="rgb(246,228,12)" fg:x="1497" fg:w="3"/><text x="34.7113%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (2 samples, 0.05%)</title><rect x="34.4843%" y="149" width="0.0460%" height="15" fill="rgb(213,55,15)" fg:x="1498" fg:w="2"/><text x="34.7343%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.05%)</title><rect x="34.4843%" y="133" width="0.0460%" height="15" fill="rgb(209,9,3)" fg:x="1498" fg:w="2"/><text x="34.7343%" y="143.50"></text></g><g><title>milestone`core::ptr::drop_in_place&lt;milestone::ai::tree::GameNode&gt; (1,500 samples, 34.53%)</title><rect x="0.0230%" y="261" width="34.5304%" height="15" fill="rgb(230,59,30)" fg:x="1" fg:w="1500"/><text x="0.2730%" y="271.50">milestone`core::ptr::drop_in_place&lt;milestone::ai::tree::..</text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,498 samples, 34.48%)</title><rect x="0.0691%" y="245" width="34.4843%" height="15" fill="rgb(209,121,21)" fg:x="3" fg:w="1498"/><text x="0.3191%" y="255.50">milestone`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop..</text></g><g><title>milestone`core::ptr::drop_in_place&lt;milestone::game::gamestate::State&gt; (1 samples, 0.02%)</title><rect x="34.5304%" y="229" width="0.0230%" height="15" fill="rgb(220,109,13)" fg:x="1500" fg:w="1"/><text x="34.7804%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.02%)</title><rect x="34.5304%" y="213" width="0.0230%" height="15" fill="rgb(232,18,1)" fg:x="1500" fg:w="1"/><text x="34.7804%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="34.5304%" y="197" width="0.0230%" height="15" fill="rgb(215,41,42)" fg:x="1500" fg:w="1"/><text x="34.7804%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.05%)</title><rect x="34.7606%" y="213" width="0.0460%" height="15" fill="rgb(224,123,36)" fg:x="1510" fg:w="2"/><text x="35.0106%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.05%)</title><rect x="34.7606%" y="197" width="0.0460%" height="15" fill="rgb(240,125,3)" fg:x="1510" fg:w="2"/><text x="35.0106%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.05%)</title><rect x="34.7606%" y="181" width="0.0460%" height="15" fill="rgb(205,98,50)" fg:x="1510" fg:w="2"/><text x="35.0106%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.14%)</title><rect x="34.8066%" y="213" width="0.1381%" height="15" fill="rgb(205,185,37)" fg:x="1512" fg:w="6"/><text x="35.0566%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="34.8757%" y="197" width="0.0691%" height="15" fill="rgb(238,207,15)" fg:x="1515" fg:w="3"/><text x="35.1257%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.05%)</title><rect x="35.4052%" y="149" width="0.0460%" height="15" fill="rgb(213,199,42)" fg:x="1538" fg:w="2"/><text x="35.6552%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.14%)</title><rect x="35.3361%" y="197" width="0.1381%" height="15" fill="rgb(235,201,11)" fg:x="1535" fg:w="6"/><text x="35.5861%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.12%)</title><rect x="35.3591%" y="181" width="0.1151%" height="15" fill="rgb(207,46,11)" fg:x="1536" fg:w="5"/><text x="35.6091%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.12%)</title><rect x="35.3591%" y="165" width="0.1151%" height="15" fill="rgb(241,35,35)" fg:x="1536" fg:w="5"/><text x="35.6091%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="35.4512%" y="149" width="0.0230%" height="15" fill="rgb(243,32,47)" fg:x="1540" fg:w="1"/><text x="35.7012%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="35.4512%" y="133" width="0.0230%" height="15" fill="rgb(247,202,23)" fg:x="1540" fg:w="1"/><text x="35.7012%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="35.4742%" y="197" width="0.0230%" height="15" fill="rgb(219,102,11)" fg:x="1541" fg:w="1"/><text x="35.7242%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.02%)</title><rect x="35.5663%" y="149" width="0.0230%" height="15" fill="rgb(243,110,44)" fg:x="1545" fg:w="1"/><text x="35.8163%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.02%)</title><rect x="35.6123%" y="133" width="0.0230%" height="15" fill="rgb(222,74,54)" fg:x="1547" fg:w="1"/><text x="35.8623%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.12%)</title><rect x="35.6584%" y="117" width="0.1151%" height="15" fill="rgb(216,99,12)" fg:x="1549" fg:w="5"/><text x="35.9084%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="35.7044%" y="101" width="0.0691%" height="15" fill="rgb(226,22,26)" fg:x="1551" fg:w="3"/><text x="35.9544%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="35.7505%" y="85" width="0.0230%" height="15" fill="rgb(217,163,10)" fg:x="1553" fg:w="1"/><text x="36.0005%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.05%)</title><rect x="35.7735%" y="117" width="0.0460%" height="15" fill="rgb(213,25,53)" fg:x="1554" fg:w="2"/><text x="36.0235%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.18%)</title><rect x="35.8195%" y="117" width="0.1842%" height="15" fill="rgb(252,105,26)" fg:x="1556" fg:w="8"/><text x="36.0695%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.18%)</title><rect x="35.8195%" y="101" width="0.1842%" height="15" fill="rgb(220,39,43)" fg:x="1556" fg:w="8"/><text x="36.0695%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="35.9807%" y="85" width="0.0230%" height="15" fill="rgb(229,68,48)" fg:x="1563" fg:w="1"/><text x="36.2307%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.05%)</title><rect x="36.0037%" y="117" width="0.0460%" height="15" fill="rgb(252,8,32)" fg:x="1564" fg:w="2"/><text x="36.2537%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.05%)</title><rect x="36.0037%" y="101" width="0.0460%" height="15" fill="rgb(223,20,43)" fg:x="1564" fg:w="2"/><text x="36.2537%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (23 samples, 0.53%)</title><rect x="35.5893%" y="149" width="0.5295%" height="15" fill="rgb(229,81,49)" fg:x="1546" fg:w="23"/><text x="35.8393%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (21 samples, 0.48%)</title><rect x="35.6354%" y="133" width="0.4834%" height="15" fill="rgb(236,28,36)" fg:x="1548" fg:w="21"/><text x="35.8854%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.07%)</title><rect x="36.0497%" y="117" width="0.0691%" height="15" fill="rgb(249,185,26)" fg:x="1566" fg:w="3"/><text x="36.2997%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (28 samples, 0.64%)</title><rect x="35.4972%" y="165" width="0.6446%" height="15" fill="rgb(249,174,33)" fg:x="1542" fg:w="28"/><text x="35.7472%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="36.1188%" y="149" width="0.0230%" height="15" fill="rgb(233,201,37)" fg:x="1569" fg:w="1"/><text x="36.3688%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="36.1418%" y="165" width="0.0230%" height="15" fill="rgb(221,78,26)" fg:x="1570" fg:w="1"/><text x="36.3918%" y="175.50"></text></g><g><title>milestone`milestone::ai::tree::GameNode::max_value (72 samples, 1.66%)</title><rect x="34.5534%" y="261" width="1.6575%" height="15" fill="rgb(250,127,30)" fg:x="1501" fg:w="72"/><text x="34.8034%" y="271.50"></text></g><g><title>milestone`milestone::ai::tree::GameNode::max_value (72 samples, 1.66%)</title><rect x="34.5534%" y="245" width="1.6575%" height="15" fill="rgb(230,49,44)" fg:x="1501" fg:w="72"/><text x="34.8034%" y="255.50"></text></g><g><title>milestone`milestone::ai::tree::GameNode::max_value (70 samples, 1.61%)</title><rect x="34.5994%" y="229" width="1.6114%" height="15" fill="rgb(229,67,23)" fg:x="1503" fg:w="70"/><text x="34.8494%" y="239.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (55 samples, 1.27%)</title><rect x="34.9448%" y="213" width="1.2661%" height="15" fill="rgb(249,83,47)" fg:x="1518" fg:w="55"/><text x="35.1948%" y="223.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.71%)</title><rect x="35.4972%" y="197" width="0.7136%" height="15" fill="rgb(215,43,3)" fg:x="1542" fg:w="31"/><text x="35.7472%" y="207.50"></text></g><g><title>milestone`alloc::raw_vec::finish_grow (31 samples, 0.71%)</title><rect x="35.4972%" y="181" width="0.7136%" height="15" fill="rgb(238,154,13)" fg:x="1542" fg:w="31"/><text x="35.7472%" y="191.50"></text></g><g><title>milestone`__rdl_realloc (2 samples, 0.05%)</title><rect x="36.1648%" y="165" width="0.0460%" height="15" fill="rgb(219,56,2)" fg:x="1571" fg:w="2"/><text x="36.4148%" y="175.50"></text></g><g><title>milestone`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.02%)</title><rect x="36.2109%" y="245" width="0.0230%" height="15" fill="rgb(233,0,4)" fg:x="1573" fg:w="1"/><text x="36.4609%" y="255.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="36.2109%" y="229" width="0.0230%" height="15" fill="rgb(235,30,7)" fg:x="1573" fg:w="1"/><text x="36.4609%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="36.2109%" y="213" width="0.0230%" height="15" fill="rgb(250,79,13)" fg:x="1573" fg:w="1"/><text x="36.4609%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="36.2339%" y="229" width="0.0230%" height="15" fill="rgb(211,146,34)" fg:x="1574" fg:w="1"/><text x="36.4839%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="36.2569%" y="229" width="0.0230%" height="15" fill="rgb(228,22,38)" fg:x="1575" fg:w="1"/><text x="36.5069%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="36.2569%" y="213" width="0.0230%" height="15" fill="rgb(235,168,5)" fg:x="1575" fg:w="1"/><text x="36.5069%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="36.2569%" y="197" width="0.0230%" height="15" fill="rgb(221,155,16)" fg:x="1575" fg:w="1"/><text x="36.5069%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="36.2799%" y="229" width="0.0230%" height="15" fill="rgb(215,215,53)" fg:x="1576" fg:w="1"/><text x="36.5299%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="36.2799%" y="213" width="0.0230%" height="15" fill="rgb(223,4,10)" fg:x="1576" fg:w="1"/><text x="36.5299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="36.2799%" y="197" width="0.0230%" height="15" fill="rgb(234,103,6)" fg:x="1576" fg:w="1"/><text x="36.5299%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="36.3029%" y="229" width="0.0230%" height="15" fill="rgb(227,97,0)" fg:x="1577" fg:w="1"/><text x="36.5529%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.12%)</title><rect x="36.3260%" y="197" width="0.1151%" height="15" fill="rgb(234,150,53)" fg:x="1578" fg:w="5"/><text x="36.5760%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.12%)</title><rect x="36.3260%" y="181" width="0.1151%" height="15" fill="rgb(228,201,54)" fg:x="1578" fg:w="5"/><text x="36.5760%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.09%)</title><rect x="36.3490%" y="165" width="0.0921%" height="15" fill="rgb(222,22,37)" fg:x="1579" fg:w="4"/><text x="36.5990%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="36.4180%" y="149" width="0.0230%" height="15" fill="rgb(237,53,32)" fg:x="1582" fg:w="1"/><text x="36.6680%" y="159.50"></text></g><g><title>milestone`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.14%)</title><rect x="36.3260%" y="229" width="0.1381%" height="15" fill="rgb(233,25,53)" fg:x="1578" fg:w="6"/><text x="36.5760%" y="239.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.14%)</title><rect x="36.3260%" y="213" width="0.1381%" height="15" fill="rgb(210,40,34)" fg:x="1578" fg:w="6"/><text x="36.5760%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="36.4411%" y="197" width="0.0230%" height="15" fill="rgb(241,220,44)" fg:x="1583" fg:w="1"/><text x="36.6911%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="36.4871%" y="149" width="0.0230%" height="15" fill="rgb(235,28,35)" fg:x="1585" fg:w="1"/><text x="36.7371%" y="159.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="36.4641%" y="229" width="0.0691%" height="15" fill="rgb(210,56,17)" fg:x="1584" fg:w="3"/><text x="36.7141%" y="239.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="36.4641%" y="213" width="0.0691%" height="15" fill="rgb(224,130,29)" fg:x="1584" fg:w="3"/><text x="36.7141%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="36.4641%" y="197" width="0.0691%" height="15" fill="rgb(235,212,8)" fg:x="1584" fg:w="3"/><text x="36.7141%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.07%)</title><rect x="36.4641%" y="181" width="0.0691%" height="15" fill="rgb(223,33,50)" fg:x="1584" fg:w="3"/><text x="36.7141%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.07%)</title><rect x="36.4641%" y="165" width="0.0691%" height="15" fill="rgb(219,149,13)" fg:x="1584" fg:w="3"/><text x="36.7141%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="36.5101%" y="149" width="0.0230%" height="15" fill="rgb(250,156,29)" fg:x="1586" fg:w="1"/><text x="36.7601%" y="159.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="36.5331%" y="229" width="0.0230%" height="15" fill="rgb(216,193,19)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="239.50"></text></g><g><title>milestone`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="36.5331%" y="213" width="0.0230%" height="15" fill="rgb(216,135,14)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="36.5331%" y="197" width="0.0230%" height="15" fill="rgb(241,47,5)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="36.5331%" y="181" width="0.0230%" height="15" fill="rgb(233,42,35)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="36.5331%" y="165" width="0.0230%" height="15" fill="rgb(231,13,6)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="36.5331%" y="149" width="0.0230%" height="15" fill="rgb(207,181,40)" fg:x="1587" fg:w="1"/><text x="36.7831%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.16%)</title><rect x="36.6943%" y="213" width="0.1611%" height="15" fill="rgb(254,173,49)" fg:x="1594" fg:w="7"/><text x="36.9443%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.28%)</title><rect x="36.8554%" y="213" width="0.2762%" height="15" fill="rgb(221,1,38)" fg:x="1601" fg:w="12"/><text x="37.1054%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.18%)</title><rect x="36.9475%" y="197" width="0.1842%" height="15" fill="rgb(206,124,46)" fg:x="1605" fg:w="8"/><text x="37.1975%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.16%)</title><rect x="36.9705%" y="181" width="0.1611%" height="15" fill="rgb(249,21,11)" fg:x="1606" fg:w="7"/><text x="37.2205%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="37.1317%" y="213" width="0.0230%" height="15" fill="rgb(222,201,40)" fg:x="1613" fg:w="1"/><text x="37.3817%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="37.3619%" y="197" width="0.0230%" height="15" fill="rgb(235,61,29)" fg:x="1623" fg:w="1"/><text x="37.6119%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.25%)</title><rect x="37.6381%" y="181" width="0.2532%" height="15" fill="rgb(219,207,3)" fg:x="1635" fg:w="11"/><text x="37.8881%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.90%)</title><rect x="37.1547%" y="213" width="0.8978%" height="15" fill="rgb(222,56,46)" fg:x="1614" fg:w="39"/><text x="37.4047%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.67%)</title><rect x="37.3849%" y="197" width="0.6676%" height="15" fill="rgb(239,76,54)" fg:x="1624" fg:w="29"/><text x="37.6349%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.16%)</title><rect x="37.8913%" y="181" width="0.1611%" height="15" fill="rgb(231,124,27)" fg:x="1646" fg:w="7"/><text x="38.1413%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (12 samples, 0.28%)</title><rect x="38.0525%" y="213" width="0.2762%" height="15" fill="rgb(249,195,6)" fg:x="1653" fg:w="12"/><text x="38.3025%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="38.8582%" y="133" width="0.0230%" height="15" fill="rgb(237,174,47)" fg:x="1688" fg:w="1"/><text x="39.1082%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.46%)</title><rect x="38.4669%" y="181" width="0.4604%" height="15" fill="rgb(206,201,31)" fg:x="1671" fg:w="20"/><text x="38.7169%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.39%)</title><rect x="38.5359%" y="165" width="0.3913%" height="15" fill="rgb(231,57,52)" fg:x="1674" fg:w="17"/><text x="38.7859%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.39%)</title><rect x="38.5359%" y="149" width="0.3913%" height="15" fill="rgb(248,177,22)" fg:x="1674" fg:w="17"/><text x="38.7859%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="38.8812%" y="133" width="0.0460%" height="15" fill="rgb(215,211,37)" fg:x="1689" fg:w="2"/><text x="39.1312%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="38.9273%" y="181" width="0.0230%" height="15" fill="rgb(241,128,51)" fg:x="1691" fg:w="1"/><text x="39.1773%" y="191.50"></text></g><g><title>milestone`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (66 samples, 1.52%)</title><rect x="38.3287%" y="213" width="1.5193%" height="15" fill="rgb(227,165,31)" fg:x="1665" fg:w="66"/><text x="38.5787%" y="223.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 1.50%)</title><rect x="38.3517%" y="197" width="1.4963%" height="15" fill="rgb(228,167,24)" fg:x="1666" fg:w="65"/><text x="38.6017%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (39 samples, 0.90%)</title><rect x="38.9503%" y="181" width="0.8978%" height="15" fill="rgb(228,143,12)" fg:x="1692" fg:w="39"/><text x="39.2003%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="39.8481%" y="197" width="0.0230%" height="15" fill="rgb(249,149,8)" fg:x="1731" fg:w="1"/><text x="40.0981%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="39.9862%" y="149" width="0.0230%" height="15" fill="rgb(243,35,44)" fg:x="1737" fg:w="1"/><text x="40.2362%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="39.9862%" y="133" width="0.0230%" height="15" fill="rgb(246,89,9)" fg:x="1737" fg:w="1"/><text x="40.2362%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="39.9862%" y="117" width="0.0230%" height="15" fill="rgb(233,213,13)" fg:x="1737" fg:w="1"/><text x="40.2362%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.14%)</title><rect x="40.3085%" y="133" width="0.1381%" height="15" fill="rgb(233,141,41)" fg:x="1751" fg:w="6"/><text x="40.5585%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.69%)</title><rect x="39.9632%" y="181" width="0.6906%" height="15" fill="rgb(239,167,4)" fg:x="1736" fg:w="30"/><text x="40.2132%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.67%)</title><rect x="39.9862%" y="165" width="0.6676%" height="15" fill="rgb(209,217,16)" fg:x="1737" fg:w="29"/><text x="40.2362%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.64%)</title><rect x="40.0092%" y="149" width="0.6446%" height="15" fill="rgb(219,88,35)" fg:x="1738" fg:w="28"/><text x="40.2592%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.21%)</title><rect x="40.4466%" y="133" width="0.2072%" height="15" fill="rgb(220,193,23)" fg:x="1757" fg:w="9"/><text x="40.6966%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.09%)</title><rect x="40.5617%" y="117" width="0.0921%" height="15" fill="rgb(230,90,52)" fg:x="1762" fg:w="4"/><text x="40.8117%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.05%)</title><rect x="40.6538%" y="181" width="0.0460%" height="15" fill="rgb(252,106,19)" fg:x="1766" fg:w="2"/><text x="40.9038%" y="191.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.85%)</title><rect x="39.8711%" y="197" width="0.8517%" height="15" fill="rgb(206,74,20)" fg:x="1732" fg:w="37"/><text x="40.1211%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="40.6998%" y="181" width="0.0230%" height="15" fill="rgb(230,138,44)" fg:x="1768" fg:w="1"/><text x="40.9498%" y="191.50"></text></g><g><title>milestone`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="40.7228%" y="197" width="0.0230%" height="15" fill="rgb(235,182,43)" fg:x="1769" fg:w="1"/><text x="40.9728%" y="207.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::clone::Clone&gt;::clone (41 samples, 0.94%)</title><rect x="39.8481%" y="213" width="0.9438%" height="15" fill="rgb(242,16,51)" fg:x="1731" fg:w="41"/><text x="40.0981%" y="223.50"></text></g><g><title>milestone`core::array::collect_into_array_unchecked (2 samples, 0.05%)</title><rect x="40.7459%" y="197" width="0.0460%" height="15" fill="rgb(248,9,4)" fg:x="1770" fg:w="2"/><text x="40.9959%" y="207.50"></text></g><g><title>milestone`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="40.7459%" y="181" width="0.0460%" height="15" fill="rgb(210,31,22)" fg:x="1770" fg:w="2"/><text x="40.9959%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.05%)</title><rect x="40.7459%" y="165" width="0.0460%" height="15" fill="rgb(239,54,39)" fg:x="1770" fg:w="2"/><text x="40.9959%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="40.7459%" y="149" width="0.0460%" height="15" fill="rgb(230,99,41)" fg:x="1770" fg:w="2"/><text x="40.9959%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="40.7459%" y="133" width="0.0460%" height="15" fill="rgb(253,106,12)" fg:x="1770" fg:w="2"/><text x="40.9959%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="40.7689%" y="117" width="0.0230%" height="15" fill="rgb(213,46,41)" fg:x="1771" fg:w="1"/><text x="41.0189%" y="127.50"></text></g><g><title>milestone`__rdl_dealloc (4 samples, 0.09%)</title><rect x="40.7919%" y="213" width="0.0921%" height="15" fill="rgb(215,133,35)" fg:x="1772" fg:w="4"/><text x="41.0419%" y="223.50"></text></g><g><title>milestone`__rust_dealloc (2 samples, 0.05%)</title><rect x="40.8840%" y="213" width="0.0460%" height="15" fill="rgb(213,28,5)" fg:x="1776" fg:w="2"/><text x="41.1340%" y="223.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="40.9300%" y="213" width="0.0230%" height="15" fill="rgb(215,77,49)" fg:x="1778" fg:w="1"/><text x="41.1800%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (3 samples, 0.07%)</title><rect x="43.0249%" y="181" width="0.0691%" height="15" fill="rgb(248,100,22)" fg:x="1869" fg:w="3"/><text x="43.2749%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (88 samples, 2.03%)</title><rect x="43.0939%" y="181" width="2.0258%" height="15" fill="rgb(208,67,9)" fg:x="1872" fg:w="88"/><text x="43.3439%" y="191.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_size (77 samples, 1.77%)</title><rect x="43.3471%" y="165" width="1.7726%" height="15" fill="rgb(219,133,21)" fg:x="1883" fg:w="77"/><text x="43.5971%" y="175.50">l..</text></g><g><title>libsystem_malloc.dylib`free (147 samples, 3.38%)</title><rect x="41.8508%" y="197" width="3.3840%" height="15" fill="rgb(246,46,29)" fg:x="1818" fg:w="147"/><text x="42.1008%" y="207.50">lib..</text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.12%)</title><rect x="45.1197%" y="181" width="0.1151%" height="15" fill="rgb(246,185,52)" fg:x="1960" fg:w="5"/><text x="45.3697%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.09%)</title><rect x="45.2348%" y="197" width="0.0921%" height="15" fill="rgb(252,136,11)" fg:x="1965" fg:w="4"/><text x="45.4848%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.05%)</title><rect x="45.2808%" y="181" width="0.0460%" height="15" fill="rgb(219,138,53)" fg:x="1967" fg:w="2"/><text x="45.5308%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.07%)</title><rect x="48.3195%" y="181" width="0.0691%" height="15" fill="rgb(211,51,23)" fg:x="2099" fg:w="3"/><text x="48.5695%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.07%)</title><rect x="48.3886%" y="181" width="0.0691%" height="15" fill="rgb(247,221,28)" fg:x="2102" fg:w="3"/><text x="48.6386%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (130 samples, 2.99%)</title><rect x="52.1869%" y="165" width="2.9926%" height="15" fill="rgb(251,222,45)" fg:x="2267" fg:w="130"/><text x="52.4369%" y="175.50">lib..</text></g><g><title>libsystem_malloc.dylib`free_tiny (500 samples, 11.51%)</title><rect x="45.3269%" y="197" width="11.5101%" height="15" fill="rgb(217,162,53)" fg:x="1969" fg:w="500"/><text x="45.5769%" y="207.50">libsystem_malloc...</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (364 samples, 8.38%)</title><rect x="48.4576%" y="181" width="8.3794%" height="15" fill="rgb(229,93,14)" fg:x="2105" fg:w="364"/><text x="48.7076%" y="191.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (72 samples, 1.66%)</title><rect x="55.1796%" y="165" width="1.6575%" height="15" fill="rgb(209,67,49)" fg:x="2397" fg:w="72"/><text x="55.4296%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.12%)</title><rect x="56.8370%" y="197" width="0.1151%" height="15" fill="rgb(213,87,29)" fg:x="2469" fg:w="5"/><text x="57.0870%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.09%)</title><rect x="56.9521%" y="197" width="0.0921%" height="15" fill="rgb(205,151,52)" fg:x="2474" fg:w="4"/><text x="57.2021%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.12%)</title><rect x="57.0442%" y="197" width="0.1151%" height="15" fill="rgb(253,215,39)" fg:x="2478" fg:w="5"/><text x="57.2942%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="57.2053%" y="181" width="0.0691%" height="15" fill="rgb(221,220,41)" fg:x="2485" fg:w="3"/><text x="57.4553%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.12%)</title><rect x="57.2744%" y="181" width="0.1151%" height="15" fill="rgb(218,133,21)" fg:x="2488" fg:w="5"/><text x="57.5244%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.14%)</title><rect x="57.3895%" y="181" width="0.1381%" height="15" fill="rgb(221,193,43)" fg:x="2493" fg:w="6"/><text x="57.6395%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.05%)</title><rect x="60.6354%" y="101" width="0.0460%" height="15" fill="rgb(240,128,52)" fg:x="2634" fg:w="2"/><text x="60.8854%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (13 samples, 0.30%)</title><rect x="60.4282%" y="133" width="0.2993%" height="15" fill="rgb(253,114,12)" fg:x="2625" fg:w="13"/><text x="60.6782%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.09%)</title><rect x="60.6354%" y="117" width="0.0921%" height="15" fill="rgb(215,223,47)" fg:x="2634" fg:w="4"/><text x="60.8854%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.05%)</title><rect x="60.6814%" y="101" width="0.0460%" height="15" fill="rgb(248,225,23)" fg:x="2636" fg:w="2"/><text x="60.9314%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.07%)</title><rect x="60.7274%" y="133" width="0.0691%" height="15" fill="rgb(250,108,0)" fg:x="2638" fg:w="3"/><text x="60.9774%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (2 samples, 0.05%)</title><rect x="66.6436%" y="117" width="0.0460%" height="15" fill="rgb(228,208,7)" fg:x="2895" fg:w="2"/><text x="66.8936%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (2 samples, 0.05%)</title><rect x="66.6436%" y="101" width="0.0460%" height="15" fill="rgb(244,45,10)" fg:x="2895" fg:w="2"/><text x="66.8936%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (44 samples, 1.01%)</title><rect x="66.6897%" y="117" width="1.0129%" height="15" fill="rgb(207,125,25)" fg:x="2897" fg:w="44"/><text x="66.9397%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (449 samples, 10.34%)</title><rect x="59.0470%" y="165" width="10.3361%" height="15" fill="rgb(210,195,18)" fg:x="2565" fg:w="449"/><text x="59.2970%" y="175.50">libsystem_mallo..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (412 samples, 9.48%)</title><rect x="59.8987%" y="149" width="9.4843%" height="15" fill="rgb(249,80,12)" fg:x="2602" fg:w="412"/><text x="60.1487%" y="159.50">libsystem_mall..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (373 samples, 8.59%)</title><rect x="60.7965%" y="133" width="8.5866%" height="15" fill="rgb(221,65,9)" fg:x="2641" fg:w="373"/><text x="61.0465%" y="143.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (73 samples, 1.68%)</title><rect x="67.7026%" y="117" width="1.6805%" height="15" fill="rgb(235,49,36)" fg:x="2941" fg:w="73"/><text x="67.9526%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.14%)</title><rect x="69.3831%" y="165" width="0.1381%" height="15" fill="rgb(225,32,20)" fg:x="3014" fg:w="6"/><text x="69.6331%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.12%)</title><rect x="69.5212%" y="165" width="0.1151%" height="15" fill="rgb(215,141,46)" fg:x="3020" fg:w="5"/><text x="69.7712%" y="175.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,024 samples, 23.57%)</title><rect x="57.5276%" y="181" width="23.5727%" height="15" fill="rgb(250,160,47)" fg:x="2499" fg:w="1024"/><text x="57.7776%" y="191.50">milestone`&lt;hashbrown::raw::RawTable&lt;T..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (498 samples, 11.46%)</title><rect x="69.6363%" y="165" width="11.4641%" height="15" fill="rgb(216,222,40)" fg:x="3025" fg:w="498"/><text x="69.8863%" y="175.50">libsystem_platfor..</text></g><g><title>milestone`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="81.1004%" y="181" width="0.0230%" height="15" fill="rgb(234,217,39)" fg:x="3523" fg:w="1"/><text x="81.3504%" y="191.50"></text></g><g><title>milestone`DYLD-STUB$$memcpy (3 samples, 0.07%)</title><rect x="81.1234%" y="181" width="0.0691%" height="15" fill="rgb(207,178,40)" fg:x="3524" fg:w="3"/><text x="81.3734%" y="191.50"></text></g><g><title>milestone`__rdl_alloc (4 samples, 0.09%)</title><rect x="81.1924%" y="181" width="0.0921%" height="15" fill="rgb(221,136,13)" fg:x="3527" fg:w="4"/><text x="81.4424%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="81.4457%" y="165" width="0.0230%" height="15" fill="rgb(249,199,10)" fg:x="3538" fg:w="1"/><text x="81.6957%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.28%)</title><rect x="81.4917%" y="149" width="0.2762%" height="15" fill="rgb(249,222,13)" fg:x="3540" fg:w="12"/><text x="81.7417%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.25%)</title><rect x="81.5147%" y="133" width="0.2532%" height="15" fill="rgb(244,185,38)" fg:x="3541" fg:w="11"/><text x="81.7647%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.23%)</title><rect x="81.5378%" y="117" width="0.2302%" height="15" fill="rgb(236,202,9)" fg:x="3542" fg:w="10"/><text x="81.7878%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.09%)</title><rect x="81.6759%" y="101" width="0.0921%" height="15" fill="rgb(250,229,37)" fg:x="3548" fg:w="4"/><text x="81.9259%" y="111.50"></text></g><g><title>milestone`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1,070 samples, 24.63%)</title><rect x="57.1593%" y="197" width="24.6317%" height="15" fill="rgb(206,174,23)" fg:x="2483" fg:w="1070"/><text x="57.4093%" y="207.50">milestone`&lt;T as alloc::borrow::ToOwned&gt;..</text></g><g><title>milestone`core::array::collect_into_array_unchecked (22 samples, 0.51%)</title><rect x="81.2845%" y="181" width="0.5064%" height="15" fill="rgb(211,33,43)" fg:x="3531" fg:w="22"/><text x="81.5345%" y="191.50"></text></g><g><title>milestone`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.32%)</title><rect x="81.4687%" y="165" width="0.3223%" height="15" fill="rgb(245,58,50)" fg:x="3539" fg:w="14"/><text x="81.7187%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="81.7680%" y="149" width="0.0230%" height="15" fill="rgb(244,68,36)" fg:x="3552" fg:w="1"/><text x="82.0180%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.12%)</title><rect x="81.8370%" y="181" width="0.1151%" height="15" fill="rgb(232,229,15)" fg:x="3555" fg:w="5"/><text x="82.0870%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="81.9521%" y="181" width="0.0230%" height="15" fill="rgb(254,30,23)" fg:x="3560" fg:w="1"/><text x="82.2021%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.16%)</title><rect x="81.9751%" y="181" width="0.1611%" height="15" fill="rgb(235,160,14)" fg:x="3561" fg:w="7"/><text x="82.2251%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (2 samples, 0.05%)</title><rect x="84.6455%" y="101" width="0.0460%" height="15" fill="rgb(212,155,44)" fg:x="3677" fg:w="2"/><text x="84.8955%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (15 samples, 0.35%)</title><rect x="84.3692%" y="133" width="0.3453%" height="15" fill="rgb(226,2,50)" fg:x="3665" fg:w="15"/><text x="84.6192%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.14%)</title><rect x="84.5764%" y="117" width="0.1381%" height="15" fill="rgb(234,177,6)" fg:x="3674" fg:w="6"/><text x="84.8264%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="84.6915%" y="101" width="0.0230%" height="15" fill="rgb(217,24,9)" fg:x="3679" fg:w="1"/><text x="84.9415%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="84.7145%" y="133" width="0.0460%" height="15" fill="rgb(220,13,46)" fg:x="3680" fg:w="2"/><text x="84.9645%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (57 samples, 1.31%)</title><rect x="90.3315%" y="117" width="1.3122%" height="15" fill="rgb(239,221,27)" fg:x="3924" fg:w="57"/><text x="90.5815%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.14%)</title><rect x="91.6436%" y="117" width="0.1381%" height="15" fill="rgb(222,198,25)" fg:x="3981" fg:w="6"/><text x="91.8936%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (503 samples, 11.58%)</title><rect x="83.9319%" y="149" width="11.5792%" height="15" fill="rgb(211,99,13)" fg:x="3646" fg:w="503"/><text x="84.1819%" y="159.50">libsystem_malloc...</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (467 samples, 10.75%)</title><rect x="84.7606%" y="133" width="10.7505%" height="15" fill="rgb(232,111,31)" fg:x="3682" fg:w="467"/><text x="85.0106%" y="143.50">libsystem_malloc..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (162 samples, 3.73%)</title><rect x="91.7818%" y="117" width="3.7293%" height="15" fill="rgb(245,82,37)" fg:x="3987" fg:w="162"/><text x="92.0318%" y="127.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (60 samples, 1.38%)</title><rect x="94.1298%" y="101" width="1.3812%" height="15" fill="rgb(227,149,46)" fg:x="4089" fg:w="60"/><text x="94.3798%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (529 samples, 12.18%)</title><rect x="83.3794%" y="165" width="12.1777%" height="15" fill="rgb(218,36,50)" fg:x="3622" fg:w="529"/><text x="83.6294%" y="175.50">libsystem_malloc.d..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="95.5110%" y="149" width="0.0460%" height="15" fill="rgb(226,80,48)" fg:x="4149" fg:w="2"/><text x="95.7610%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.16%)</title><rect x="95.5571%" y="165" width="0.1611%" height="15" fill="rgb(238,224,15)" fg:x="4151" fg:w="7"/><text x="95.8071%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.14%)</title><rect x="95.7182%" y="165" width="0.1381%" height="15" fill="rgb(241,136,10)" fg:x="4158" fg:w="6"/><text x="95.9682%" y="175.50"></text></g><g><title>milestone`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (632 samples, 14.55%)</title><rect x="82.1363%" y="181" width="14.5488%" height="15" fill="rgb(208,32,45)" fg:x="3568" fg:w="632"/><text x="82.3863%" y="191.50">milestone`&lt;hashbrown::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.83%)</title><rect x="95.8564%" y="165" width="0.8287%" height="15" fill="rgb(207,135,9)" fg:x="4164" fg:w="36"/><text x="96.1064%" y="175.50"></text></g><g><title>milestone`DYLD-STUB$$memcpy (5 samples, 0.12%)</title><rect x="96.6851%" y="181" width="0.1151%" height="15" fill="rgb(206,86,44)" fg:x="4200" fg:w="5"/><text x="96.9351%" y="191.50"></text></g><g><title>milestone`__rdl_alloc (5 samples, 0.12%)</title><rect x="96.8002%" y="181" width="0.1151%" height="15" fill="rgb(245,177,15)" fg:x="4205" fg:w="5"/><text x="97.0502%" y="191.50"></text></g><g><title>milestone`__rust_alloc (2 samples, 0.05%)</title><rect x="96.9153%" y="181" width="0.0460%" height="15" fill="rgb(206,64,50)" fg:x="4210" fg:w="2"/><text x="97.1653%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.05%)</title><rect x="97.0534%" y="165" width="0.0460%" height="15" fill="rgb(234,36,40)" fg:x="4216" fg:w="2"/><text x="97.3034%" y="175.50"></text></g><g><title>milestone`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.21%)</title><rect x="97.0994%" y="165" width="0.2072%" height="15" fill="rgb(213,64,8)" fg:x="4218" fg:w="9"/><text x="97.3494%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.18%)</title><rect x="97.1225%" y="149" width="0.1842%" height="15" fill="rgb(210,75,36)" fg:x="4219" fg:w="8"/><text x="97.3725%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.18%)</title><rect x="97.1225%" y="133" width="0.1842%" height="15" fill="rgb(229,88,21)" fg:x="4219" fg:w="8"/><text x="97.3725%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.18%)</title><rect x="97.1225%" y="117" width="0.1842%" height="15" fill="rgb(252,204,47)" fg:x="4219" fg:w="8"/><text x="97.3725%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="97.2606%" y="101" width="0.0460%" height="15" fill="rgb(208,77,27)" fg:x="4225" fg:w="2"/><text x="97.5106%" y="111.50"></text></g><g><title>milestone`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="97.3066%" y="165" width="0.0230%" height="15" fill="rgb(221,76,26)" fg:x="4227" fg:w="1"/><text x="97.5566%" y="175.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::clone::Clone&gt;::clone (676 samples, 15.56%)</title><rect x="81.7910%" y="197" width="15.5617%" height="15" fill="rgb(225,139,18)" fg:x="3553" fg:w="676"/><text x="82.0410%" y="207.50">milestone`&lt;milestone::ga..</text></g><g><title>milestone`core::array::collect_into_array_unchecked (17 samples, 0.39%)</title><rect x="96.9613%" y="181" width="0.3913%" height="15" fill="rgb(230,137,11)" fg:x="4212" fg:w="17"/><text x="97.2113%" y="191.50"></text></g><g><title>milestone`__rdl_alloc (1 samples, 0.02%)</title><rect x="97.3297%" y="165" width="0.0230%" height="15" fill="rgb(212,28,1)" fg:x="4228" fg:w="1"/><text x="97.5797%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="97.3757%" y="117" width="0.0230%" height="15" fill="rgb(248,164,17)" fg:x="4230" fg:w="1"/><text x="97.6257%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.02%)</title><rect x="97.3987%" y="117" width="0.0230%" height="15" fill="rgb(222,171,42)" fg:x="4231" fg:w="1"/><text x="97.6487%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.09%)</title><rect x="97.4217%" y="117" width="0.0921%" height="15" fill="rgb(243,84,45)" fg:x="4232" fg:w="4"/><text x="97.6717%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.09%)</title><rect x="97.4217%" y="101" width="0.0921%" height="15" fill="rgb(252,49,23)" fg:x="4232" fg:w="4"/><text x="97.6717%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.09%)</title><rect x="97.4217%" y="85" width="0.0921%" height="15" fill="rgb(215,19,7)" fg:x="4232" fg:w="4"/><text x="97.6717%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="97.4908%" y="69" width="0.0230%" height="15" fill="rgb(238,81,41)" fg:x="4235" fg:w="1"/><text x="97.7408%" y="79.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.71%)</title><rect x="97.3527%" y="197" width="0.7136%" height="15" fill="rgb(210,199,37)" fg:x="4229" fg:w="31"/><text x="97.6027%" y="207.50"></text></g><g><title>milestone`alloc::raw_vec::finish_grow (31 samples, 0.71%)</title><rect x="97.3527%" y="181" width="0.7136%" height="15" fill="rgb(244,192,49)" fg:x="4229" fg:w="31"/><text x="97.6027%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (31 samples, 0.71%)</title><rect x="97.3527%" y="165" width="0.7136%" height="15" fill="rgb(226,211,11)" fg:x="4229" fg:w="31"/><text x="97.6027%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (31 samples, 0.71%)</title><rect x="97.3527%" y="149" width="0.7136%" height="15" fill="rgb(236,162,54)" fg:x="4229" fg:w="31"/><text x="97.6027%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (31 samples, 0.71%)</title><rect x="97.3527%" y="133" width="0.7136%" height="15" fill="rgb(220,229,9)" fg:x="4229" fg:w="31"/><text x="97.6027%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.55%)</title><rect x="97.5138%" y="117" width="0.5525%" height="15" fill="rgb(250,87,22)" fg:x="4236" fg:w="24"/><text x="97.7638%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="98.0663%" y="181" width="0.0230%" height="15" fill="rgb(239,43,17)" fg:x="4260" fg:w="1"/><text x="98.3163%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="98.0663%" y="165" width="0.0230%" height="15" fill="rgb(231,177,25)" fg:x="4260" fg:w="1"/><text x="98.3163%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="98.1123%" y="165" width="0.0230%" height="15" fill="rgb(219,179,1)" fg:x="4262" fg:w="1"/><text x="98.3623%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.09%)</title><rect x="98.1814%" y="149" width="0.0921%" height="15" fill="rgb(238,219,53)" fg:x="4265" fg:w="4"/><text x="98.4314%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.07%)</title><rect x="98.2044%" y="133" width="0.0691%" height="15" fill="rgb(232,167,36)" fg:x="4266" fg:w="3"/><text x="98.4544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.07%)</title><rect x="98.2044%" y="117" width="0.0691%" height="15" fill="rgb(244,19,51)" fg:x="4266" fg:w="3"/><text x="98.4544%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="98.2735%" y="149" width="0.0460%" height="15" fill="rgb(224,6,22)" fg:x="4269" fg:w="2"/><text x="98.5235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="98.2965%" y="133" width="0.0230%" height="15" fill="rgb(224,145,5)" fg:x="4270" fg:w="1"/><text x="98.5465%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="98.2965%" y="117" width="0.0230%" height="15" fill="rgb(234,130,49)" fg:x="4270" fg:w="1"/><text x="98.5465%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.05%)</title><rect x="98.4116%" y="133" width="0.0460%" height="15" fill="rgb(254,6,2)" fg:x="4275" fg:w="2"/><text x="98.6616%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="98.4116%" y="117" width="0.0460%" height="15" fill="rgb(208,96,46)" fg:x="4275" fg:w="2"/><text x="98.6616%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="98.4116%" y="101" width="0.0460%" height="15" fill="rgb(239,3,39)" fg:x="4275" fg:w="2"/><text x="98.6616%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="98.4576%" y="133" width="0.0230%" height="15" fill="rgb(233,210,1)" fg:x="4277" fg:w="1"/><text x="98.7076%" y="143.50"></text></g><g><title>milestone`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.37%)</title><rect x="98.1354%" y="165" width="0.3683%" height="15" fill="rgb(244,137,37)" fg:x="4263" fg:w="16"/><text x="98.3854%" y="175.50"></text></g><g><title>milestone`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.18%)</title><rect x="98.3195%" y="149" width="0.1842%" height="15" fill="rgb(240,136,2)" fg:x="4271" fg:w="8"/><text x="98.5695%" y="159.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="98.4807%" y="133" width="0.0230%" height="15" fill="rgb(239,18,37)" fg:x="4278" fg:w="1"/><text x="98.7307%" y="143.50"></text></g><g><title>milestone`__rdl_realloc (1 samples, 0.02%)</title><rect x="98.5037%" y="149" width="0.0230%" height="15" fill="rgb(218,185,22)" fg:x="4279" fg:w="1"/><text x="98.7537%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.07%)</title><rect x="98.5497%" y="85" width="0.0691%" height="15" fill="rgb(225,218,4)" fg:x="4281" fg:w="3"/><text x="98.7997%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="98.5497%" y="69" width="0.0691%" height="15" fill="rgb(230,182,32)" fg:x="4281" fg:w="3"/><text x="98.7997%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.05%)</title><rect x="98.5727%" y="53" width="0.0460%" height="15" fill="rgb(242,56,43)" fg:x="4282" fg:w="2"/><text x="98.8227%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.07%)</title><rect x="98.6188%" y="85" width="0.0691%" height="15" fill="rgb(233,99,24)" fg:x="4284" fg:w="3"/><text x="98.8688%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.07%)</title><rect x="98.6188%" y="69" width="0.0691%" height="15" fill="rgb(234,209,42)" fg:x="4284" fg:w="3"/><text x="98.8688%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="98.6648%" y="53" width="0.0230%" height="15" fill="rgb(227,7,12)" fg:x="4286" fg:w="1"/><text x="98.9148%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="98.6648%" y="37" width="0.0230%" height="15" fill="rgb(245,203,43)" fg:x="4286" fg:w="1"/><text x="98.9148%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="98.6878%" y="85" width="0.0230%" height="15" fill="rgb(238,205,33)" fg:x="4287" fg:w="1"/><text x="98.9378%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="98.6878%" y="69" width="0.0230%" height="15" fill="rgb(231,56,7)" fg:x="4287" fg:w="1"/><text x="98.9378%" y="79.50"></text></g><g><title>milestone`milestone::game::board::Board::all_valid_moves (29 samples, 0.67%)</title><rect x="98.0663%" y="197" width="0.6676%" height="15" fill="rgb(244,186,29)" fg:x="4260" fg:w="29"/><text x="98.3163%" y="207.50"></text></g><g><title>milestone`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.64%)</title><rect x="98.0893%" y="181" width="0.6446%" height="15" fill="rgb(234,111,31)" fg:x="4261" fg:w="28"/><text x="98.3393%" y="191.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.23%)</title><rect x="98.5037%" y="165" width="0.2302%" height="15" fill="rgb(241,149,10)" fg:x="4279" fg:w="10"/><text x="98.7537%" y="175.50"></text></g><g><title>milestone`alloc::raw_vec::finish_grow (9 samples, 0.21%)</title><rect x="98.5267%" y="149" width="0.2072%" height="15" fill="rgb(249,206,44)" fg:x="4280" fg:w="9"/><text x="98.7767%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.21%)</title><rect x="98.5267%" y="133" width="0.2072%" height="15" fill="rgb(251,153,30)" fg:x="4280" fg:w="9"/><text x="98.7767%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.21%)</title><rect x="98.5267%" y="117" width="0.2072%" height="15" fill="rgb(239,152,38)" fg:x="4280" fg:w="9"/><text x="98.7767%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.21%)</title><rect x="98.5267%" y="101" width="0.2072%" height="15" fill="rgb(249,139,47)" fg:x="4280" fg:w="9"/><text x="98.7767%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="98.7109%" y="85" width="0.0230%" height="15" fill="rgb(244,64,35)" fg:x="4288" fg:w="1"/><text x="98.9609%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.16%)</title><rect x="98.9411%" y="181" width="0.1611%" height="15" fill="rgb(216,46,15)" fg:x="4298" fg:w="7"/><text x="99.1911%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.16%)</title><rect x="98.9411%" y="165" width="0.1611%" height="15" fill="rgb(250,74,19)" fg:x="4298" fg:w="7"/><text x="99.1911%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.16%)</title><rect x="98.9411%" y="149" width="0.1611%" height="15" fill="rgb(249,42,33)" fg:x="4298" fg:w="7"/><text x="99.1911%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.07%)</title><rect x="99.0331%" y="133" width="0.0691%" height="15" fill="rgb(242,149,17)" fg:x="4302" fg:w="3"/><text x="99.2831%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.07%)</title><rect x="99.1022%" y="181" width="0.0691%" height="15" fill="rgb(244,29,21)" fg:x="4305" fg:w="3"/><text x="99.3522%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.05%)</title><rect x="99.1252%" y="165" width="0.0460%" height="15" fill="rgb(220,130,37)" fg:x="4306" fg:w="2"/><text x="99.3752%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.05%)</title><rect x="99.1252%" y="149" width="0.0460%" height="15" fill="rgb(211,67,2)" fg:x="4306" fg:w="2"/><text x="99.3752%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.07%)</title><rect x="99.2864%" y="149" width="0.0691%" height="15" fill="rgb(235,68,52)" fg:x="4313" fg:w="3"/><text x="99.5364%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.21%)</title><rect x="99.1713%" y="181" width="0.2072%" height="15" fill="rgb(246,142,3)" fg:x="4308" fg:w="9"/><text x="99.4213%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.16%)</title><rect x="99.2173%" y="165" width="0.1611%" height="15" fill="rgb(241,25,7)" fg:x="4310" fg:w="7"/><text x="99.4673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="99.3554%" y="149" width="0.0230%" height="15" fill="rgb(242,119,39)" fg:x="4316" fg:w="1"/><text x="99.6054%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.05%)</title><rect x="99.3785%" y="181" width="0.0460%" height="15" fill="rgb(241,98,45)" fg:x="4317" fg:w="2"/><text x="99.6285%" y="191.50"></text></g><g><title>milestone`milestone::game::board::Board::possible_move (31 samples, 0.71%)</title><rect x="98.7339%" y="197" width="0.7136%" height="15" fill="rgb(254,28,30)" fg:x="4289" fg:w="31"/><text x="98.9839%" y="207.50"></text></g><g><title>milestone`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.4245%" y="181" width="0.0230%" height="15" fill="rgb(241,142,54)" fg:x="4319" fg:w="1"/><text x="99.6745%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.4705%" y="181" width="0.0230%" height="15" fill="rgb(222,85,15)" fg:x="4321" fg:w="1"/><text x="99.7205%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="99.4936%" y="181" width="0.0230%" height="15" fill="rgb(210,85,47)" fg:x="4322" fg:w="1"/><text x="99.7436%" y="191.50"></text></g><g><title>milestone`__rdl_dealloc (1 samples, 0.02%)</title><rect x="99.5166%" y="181" width="0.0230%" height="15" fill="rgb(224,206,25)" fg:x="4323" fg:w="1"/><text x="99.7666%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="99.6087%" y="165" width="0.0691%" height="15" fill="rgb(243,201,19)" fg:x="4327" fg:w="3"/><text x="99.8587%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.07%)</title><rect x="99.6087%" y="149" width="0.0691%" height="15" fill="rgb(236,59,4)" fg:x="4327" fg:w="3"/><text x="99.8587%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.07%)</title><rect x="99.6087%" y="133" width="0.0691%" height="15" fill="rgb(254,179,45)" fg:x="4327" fg:w="3"/><text x="99.8587%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="99.6547%" y="117" width="0.0230%" height="15" fill="rgb(226,14,10)" fg:x="4329" fg:w="1"/><text x="99.9047%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="99.6777%" y="165" width="0.0230%" height="15" fill="rgb(244,27,41)" fg:x="4330" fg:w="1"/><text x="99.9277%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="99.7007%" y="165" width="0.0460%" height="15" fill="rgb(235,35,32)" fg:x="4331" fg:w="2"/><text x="99.9507%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.07%)</title><rect x="99.7468%" y="165" width="0.0691%" height="15" fill="rgb(218,68,31)" fg:x="4333" fg:w="3"/><text x="99.9968%" y="175.50"></text></g><g><title>milestone`milestone::ai::tree::add_all_possible_children (2,558 samples, 58.89%)</title><rect x="40.9530%" y="213" width="58.8858%" height="15" fill="rgb(207,120,37)" fg:x="1779" fg:w="2558"/><text x="41.2030%" y="223.50">milestone`milestone::ai::tree::add_all_possible_children</text></g><g><title>milestone`milestone::game::gamestate::State::move_piece (17 samples, 0.39%)</title><rect x="99.4475%" y="197" width="0.3913%" height="15" fill="rgb(227,98,0)" fg:x="4320" fg:w="17"/><text x="99.6975%" y="207.50"></text></g><g><title>milestone`milestone::game::board::Board::possible_move (13 samples, 0.30%)</title><rect x="99.5396%" y="181" width="0.2993%" height="15" fill="rgb(207,7,3)" fg:x="4324" fg:w="13"/><text x="99.7896%" y="191.50"></text></g><g><title>milestone`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.8158%" y="165" width="0.0230%" height="15" fill="rgb(206,98,19)" fg:x="4336" fg:w="1"/><text x="100.0658%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="99.8389%" y="197" width="0.0460%" height="15" fill="rgb(217,5,26)" fg:x="4337" fg:w="2"/><text x="100.0889%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="99.8619%" y="181" width="0.0230%" height="15" fill="rgb(235,190,38)" fg:x="4338" fg:w="1"/><text x="100.1119%" y="191.50"></text></g><g><title>milestone`milestone::game::board::Board::possible_move (3 samples, 0.07%)</title><rect x="99.8389%" y="213" width="0.0691%" height="15" fill="rgb(247,86,24)" fg:x="4337" fg:w="3"/><text x="100.0889%" y="223.50"></text></g><g><title>milestone`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.8849%" y="197" width="0.0230%" height="15" fill="rgb(205,101,16)" fg:x="4339" fg:w="1"/><text x="100.1349%" y="207.50"></text></g><g><title>milestone`milestone::ai::tree::add_all_possible_children (2,767 samples, 63.70%)</title><rect x="36.2339%" y="245" width="63.6971%" height="15" fill="rgb(246,168,33)" fg:x="1574" fg:w="2767"/><text x="36.4839%" y="255.50">milestone`milestone::ai::tree::add_all_possible_children</text></g><g><title>milestone`milestone::ai::tree::add_all_possible_children (2,753 samples, 63.37%)</title><rect x="36.5562%" y="229" width="63.3748%" height="15" fill="rgb(231,114,1)" fg:x="1588" fg:w="2753"/><text x="36.8062%" y="239.50">milestone`milestone::ai::tree::add_all_possible_children</text></g><g><title>milestone`milestone::game::gamestate::State::move_piece (1 samples, 0.02%)</title><rect x="99.9079%" y="213" width="0.0230%" height="15" fill="rgb(207,184,53)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="223.50"></text></g><g><title>milestone`milestone::game::board::Board::possible_move (1 samples, 0.02%)</title><rect x="99.9079%" y="197" width="0.0230%" height="15" fill="rgb(224,95,51)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="99.9079%" y="181" width="0.0230%" height="15" fill="rgb(212,188,45)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9079%" y="165" width="0.0230%" height="15" fill="rgb(223,154,38)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9079%" y="149" width="0.0230%" height="15" fill="rgb(251,22,52)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="99.9079%" y="133" width="0.0230%" height="15" fill="rgb(229,209,22)" fg:x="4340" fg:w="1"/><text x="100.1579%" y="143.50"></text></g><g><title>milestone`milestone::ai::tree::add_all_possible_children (2,769 samples, 63.74%)</title><rect x="36.2109%" y="261" width="63.7431%" height="15" fill="rgb(234,138,34)" fg:x="1573" fg:w="2769"/><text x="36.4609%" y="271.50">milestone`milestone::ai::tree::add_all_possible_children</text></g><g><title>milestone`milestone::game::board::Board::possible_move (1 samples, 0.02%)</title><rect x="99.9309%" y="245" width="0.0230%" height="15" fill="rgb(212,95,11)" fg:x="4341" fg:w="1"/><text x="100.1809%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.9309%" y="229" width="0.0230%" height="15" fill="rgb(240,179,47)" fg:x="4341" fg:w="1"/><text x="100.1809%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="99.9309%" y="213" width="0.0230%" height="15" fill="rgb(240,163,11)" fg:x="4341" fg:w="1"/><text x="100.1809%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (1 samples, 0.02%)</title><rect x="99.9309%" y="197" width="0.0230%" height="15" fill="rgb(236,37,12)" fg:x="4341" fg:w="1"/><text x="100.1809%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.9309%" y="181" width="0.0230%" height="15" fill="rgb(232,164,16)" fg:x="4341" fg:w="1"/><text x="100.1809%" y="191.50"></text></g><g><title>milestone`&lt;milestone::game::player::PossiblePlayer as milestone::game::player::Player&gt;::one_turn (4,342 samples, 99.95%)</title><rect x="0.0230%" y="277" width="99.9540%" height="15" fill="rgb(244,205,15)" fg:x="1" fg:w="4342"/><text x="0.2730%" y="287.50">milestone`&lt;milestone::game::player::PossiblePlayer as milestone::game::player::Player&gt;::one_turn</text></g><g><title>milestone`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.9540%" y="261" width="0.0230%" height="15" fill="rgb(223,117,47)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="271.50"></text></g><g><title>milestone`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.9540%" y="245" width="0.0230%" height="15" fill="rgb(244,107,35)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="255.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9540%" y="229" width="0.0230%" height="15" fill="rgb(205,140,8)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="239.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9540%" y="213" width="0.0230%" height="15" fill="rgb(228,84,46)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="223.50"></text></g><g><title>milestone`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.9540%" y="197" width="0.0230%" height="15" fill="rgb(254,188,9)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="207.50"></text></g><g><title>milestone`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.9540%" y="181" width="0.0230%" height="15" fill="rgb(206,112,54)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="99.9540%" y="165" width="0.0230%" height="15" fill="rgb(216,84,49)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="99.9540%" y="149" width="0.0230%" height="15" fill="rgb(214,194,35)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="99.9540%" y="133" width="0.0230%" height="15" fill="rgb(249,28,3)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9540%" y="117" width="0.0230%" height="15" fill="rgb(222,56,52)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9540%" y="101" width="0.0230%" height="15" fill="rgb(245,217,50)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="99.9540%" y="85" width="0.0230%" height="15" fill="rgb(213,201,24)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="99.9540%" y="69" width="0.0230%" height="15" fill="rgb(248,116,28)" fg:x="4342" fg:w="1"/><text x="100.2040%" y="79.50"></text></g><g><title>all (4,344 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(219,72,43)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="415.50"></text></g><g><title>0x1 (4,344 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="399.50">0x1</text></g><g><title>libdyld.dylib`start (4,344 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="383.50">libdyld.dylib`start</text></g><g><title>milestone`main (4,344 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(213,199,7)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="367.50">milestone`main</text></g><g><title>milestone`std::rt::lang_start_internal (4,344 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="351.50">milestone`std::rt::lang_start_internal</text></g><g><title>milestone`std::rt::lang_start::_{{closure}} (4,344 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="335.50">milestone`std::rt::lang_start::_{{closure}}</text></g><g><title>milestone`std::sys_common::backtrace::__rust_begin_short_backtrace (4,344 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="319.50">milestone`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>milestone`milestone::cli::two_player_game (4,344 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="4344"/><text x="0.2500%" y="303.50">milestone`milestone::cli::two_player_game</text></g><g><title>milestone`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.9770%" y="277" width="0.0230%" height="15" fill="rgb(225,148,7)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="287.50"></text></g><g><title>milestone`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.9770%" y="261" width="0.0230%" height="15" fill="rgb(220,160,43)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="271.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9770%" y="245" width="0.0230%" height="15" fill="rgb(213,52,39)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="255.50"></text></g><g><title>milestone`&lt;milestone::game::gamestate::State as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9770%" y="229" width="0.0230%" height="15" fill="rgb(243,137,7)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="239.50"></text></g><g><title>milestone`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="99.9770%" y="213" width="0.0230%" height="15" fill="rgb(230,79,13)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="223.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9770%" y="197" width="0.0230%" height="15" fill="rgb(247,105,23)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="207.50"></text></g><g><title>milestone`&lt;milestone::game::board::Board as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9770%" y="181" width="0.0230%" height="15" fill="rgb(223,179,41)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="191.50"></text></g><g><title>milestone`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="99.9770%" y="165" width="0.0230%" height="15" fill="rgb(218,9,34)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="175.50"></text></g><g><title>milestone`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9770%" y="149" width="0.0230%" height="15" fill="rgb(222,106,8)" fg:x="4343" fg:w="1"/><text x="100.2270%" y="159.50"></text></g></svg></svg>